{"ast":null,"code":"import _asyncToGenerator from \"/Users/alexfederico/Documents/GitHub/RestaurantApp/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AdminComponent = class AdminComponent {\n  constructor(router, restaurantService) {\n    this.router = router;\n    this.restaurantService = restaurantService;\n    this.restaurants = [];\n    this.failed = false;\n  }\n\n  ngOnInit() {\n    this.getRestaurants();\n  }\n\n  getRestaurants() {\n    this.restaurantService.getRestaurants().subscribe(response => {\n      this.restaurants = response;\n    }, error => {\n      alert(error.message);\n    });\n  }\n\n  onAddRestaurant(addForm) {\n    document.getElementById('add-restaurant-form')?.click();\n    this.restaurantService.addRestaurant(addForm.value).subscribe(response => {\n      console.log(response);\n      this.getRestaurants();\n      addForm.reset();\n    }, error => {\n      alert(error.message);\n      addForm.reset();\n    });\n  }\n\n  onUpdateRestaurant(restaurant) {\n    this.restaurantService.updateRestaurant(restaurant).subscribe(response => {\n      console.log(response);\n      this.getRestaurants();\n    }, error => {\n      alert(error.message);\n    });\n  }\n\n  onDeleteRestaurant(restaurantId) {\n    this.restaurantService.deleteRestaurant(restaurantId).subscribe(response => {\n      console.log(response);\n      this.getRestaurants();\n    }, error => {\n      alert(error.message);\n    });\n  }\n\n  searchRestaurants(key) {\n    const results = [];\n\n    for (const restaurant of this.restaurants) {\n      if (restaurant.name.toLowerCase().indexOf(key.toLowerCase()) !== -1 || restaurant.type.toLowerCase().indexOf(key.toLowerCase()) !== -1 || restaurant.price.toString().indexOf(key.toLowerCase()) !== -1) {\n        results.push(restaurant);\n      }\n    }\n\n    this.restaurants = results;\n\n    if (results.length === 0 || !key) {\n      this.getRestaurants();\n    }\n  }\n\n  onOpenModal(restaurant, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addRestaurantModal');\n    }\n\n    if (mode === 'edit') {\n      this.editRestaurant = restaurant || undefined;\n      button.setAttribute('data-target', '#updateRestaurantModal');\n    }\n\n    if (mode === 'delete') {\n      this.deleteRestaurant = restaurant || undefined;\n      button.setAttribute('data-target', '#deleteRestaurantModal');\n    }\n\n    container?.appendChild(button);\n    button.click();\n  }\n\n  logout() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let resp = _this.restaurantService.logout(); //   resp.subscribe({\n      //     next: resp => this.router.navigate([\"login\"]),\n      //     error:  (error) => this.failed=true//(error)=> this.failed = true\n      //   })\n\n\n      resp.subscribe(response => {\n        console.log(response);\n      }, error => {\n        alert(error.message);\n      }); //\n      // (response: this.restaurantService.logout()) => {\n      //   this.restaurants = response;\n      // },\n      // (error: HttpErrorResponse) => {\n      //   alert(error.message);\n      // }\n    })();\n  }\n\n};\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})], AdminComponent);\nexport { AdminComponent };","map":{"version":3,"mappings":"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","names":["Component","AdminComponent","constructor","router","restaurantService","ngOnInit","getRestaurants","subscribe","response","restaurants","error","alert","message","onAddRestaurant","addForm","document","getElementById","click","addRestaurant","value","console","log","reset","onUpdateRestaurant","restaurant","updateRestaurant","onDeleteRestaurant","restaurantId","deleteRestaurant","searchRestaurants","key","results","name","toLowerCase","indexOf","type","price","toString","push","length","onOpenModal","mode","container","button","createElement","style","display","setAttribute","editRestaurant","undefined","appendChild","logout","resp","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/alexfederico/Documents/GitHub/RestaurantApp/frontend/src/app/components/admin/admin.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Restaurant } from '../../restaurant';\nimport { RestaurantService } from '../../restaurant.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n  public restaurants: Restaurant[] = [];\n  public editRestaurant: Restaurant | undefined;\n  public deleteRestaurant: Restaurant | undefined;\n\n  failed: boolean = false;\n  constructor (private router: Router, private restaurantService: RestaurantService) {}\n\n  ngOnInit() {\n    this.getRestaurants();\n  }\n\n  public getRestaurants(): void {\n    this.restaurantService.getRestaurants().subscribe(\n      (response: Restaurant[]) => {\n        this.restaurants = response;\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onAddRestaurant(addForm: NgForm): void {\n    document.getElementById('add-restaurant-form')?.click();\n    this.restaurantService.addRestaurant(addForm.value).subscribe(\n      (response: Restaurant) => {\n        console.log(response);\n        this.getRestaurants();\n        addForm.reset();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n        addForm.reset();\n      }\n    );\n  }\n\n  public onUpdateRestaurant(restaurant: Restaurant): void {\n    this.restaurantService.updateRestaurant(restaurant).subscribe(\n      (response: Restaurant) => {\n        console.log(response);\n        this.getRestaurants();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onDeleteRestaurant(restaurantId: number): void {\n    this.restaurantService.deleteRestaurant(restaurantId).subscribe(\n      (response: void) => {\n        console.log(response);\n        this.getRestaurants();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public searchRestaurants(key: string): void {\n    const results: Restaurant[] = [];\n    for(const restaurant of this.restaurants) {\n      if (restaurant.name.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || restaurant.type.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || restaurant.price.toString().indexOf(key.toLowerCase()) !== -1) {\n        results.push(restaurant)\n      }\n    }\n    this.restaurants = results;\n    if (results.length === 0 || !key) {\n      this.getRestaurants();\n    }\n  }\n\n  public onOpenModal(restaurant: Restaurant|null, mode: string): void {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addRestaurantModal');\n    }\n    if (mode === 'edit') {\n      this.editRestaurant = restaurant || undefined;\n      button.setAttribute('data-target', '#updateRestaurantModal');\n    }\n    if (mode === 'delete') {\n      this.deleteRestaurant = restaurant || undefined;\n      button.setAttribute('data-target', '#deleteRestaurantModal');\n    }\n    container?.appendChild(button);\n    button.click();\n  }\n\n  async logout(){\n    let resp = this.restaurantService.logout();\n  //   resp.subscribe({\n  //     next: resp => this.router.navigate([\"login\"]),\n  //     error:  (error) => this.failed=true//(error)=> this.failed = true\n  //   })\n  resp.subscribe(\n    response => {\n      console.log(response);\n    },\n    (error: HttpErrorResponse) =>{\n      alert(error.message);\n    }\n  );\n  //\n  // (response: this.restaurantService.logout()) => {\n  //   this.restaurants = response;\n  // },\n  // (error: HttpErrorResponse) => {\n  //   alert(error.message);\n  // }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}