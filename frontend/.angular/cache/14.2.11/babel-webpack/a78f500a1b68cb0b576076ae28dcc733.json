{"ast":null,"code":"import _asyncToGenerator from \"E:/CS-Project/RestaurantApp/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../../restaurant.service\";\nconst _c0 = \"body[_ngcontent-%COMP%]{\\r\\n  margin: 0px;\\r\\n  padding: 0px;\\r\\n  background: #333;\\r\\n}\\r\\n.container[_ngcontent-%COMP%]{\\r\\n  width: 100%;\\r\\n  height: 100vh;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n}\\r\\n.my-form[_ngcontent-%COMP%]{\\r\\n  background: #fff;\\r\\n  padding: 30px 50px;\\r\\n  border-radius: 10px;\\r\\n}\\r\\n.form-title[_ngcontent-%COMP%]{\\r\\n  text-align: center;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n.form-title[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{\\r\\n  margin: 0px;\\r\\n  color: #0cd6a8;\\r\\n}\\r\\n.single-input[_ngcontent-%COMP%]{\\r\\n  width: 270px;\\r\\n  border:1px solid #c1c1c1;\\r\\n  display: flex;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n.single-input[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{\\r\\n  padding: 8px 16px;\\r\\n  color: #0cd6a8;\\r\\n}\\r\\n.single-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\r\\n  border:0px solid #c1c1c1;\\r\\n  width: 100%;\\r\\n  outline: none;\\r\\n  height: 30px;\\r\\n  font-size: 18px;\\r\\n}\\r\\n.submit-btn[_ngcontent-%COMP%]{\\r\\n   border:0px solid #c1c1c1;\\r\\n   margin-top: 30px;\\r\\n\\r\\n}\\r\\n.submit-btn[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{\\r\\n   background: #0cd6a8;\\r\\n   color: #fff;\\r\\n   cursor: pointer;\\r\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFkbWluLWxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsV0FBVztBQUNYO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7QUFDQTtFQUNFLGdCQUFnQjtFQUNoQixrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsY0FBYztBQUNoQjtBQUNBO0VBQ0UsWUFBWTtFQUNaLHdCQUF3QjtFQUN4QixhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsY0FBYztBQUNoQjtBQUNBO0VBQ0Usd0JBQXdCO0VBQ3hCLFdBQVc7RUFDWCxhQUFhO0VBQ2IsWUFBWTtFQUNaLGVBQWU7QUFDakI7QUFDQTtHQUNHLHdCQUF3QjtHQUN4QixnQkFBZ0I7O0FBRW5CO0FBQ0E7R0FDRyxtQkFBbUI7R0FDbkIsV0FBVztHQUNYLGVBQWU7QUFDbEIiLCJmaWxlIjoiYWRtaW4tbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qY3NzIGZpbGUqL1xyXG5ib2R5e1xyXG4gIG1hcmdpbjogMHB4O1xyXG4gIHBhZGRpbmc6IDBweDtcclxuICBiYWNrZ3JvdW5kOiAjMzMzO1xyXG59XHJcbi5jb250YWluZXJ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuLm15LWZvcm17XHJcbiAgYmFja2dyb3VuZDogI2ZmZjtcclxuICBwYWRkaW5nOiAzMHB4IDUwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxufVxyXG4uZm9ybS10aXRsZXtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG4uZm9ybS10aXRsZSBoMXtcclxuICBtYXJnaW46IDBweDtcclxuICBjb2xvcjogIzBjZDZhODtcclxufVxyXG4uc2luZ2xlLWlucHV0e1xyXG4gIHdpZHRoOiAyNzBweDtcclxuICBib3JkZXI6MXB4IHNvbGlkICNjMWMxYzE7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcbi5zaW5nbGUtaW5wdXQgaXtcclxuICBwYWRkaW5nOiA4cHggMTZweDtcclxuICBjb2xvcjogIzBjZDZhODtcclxufVxyXG4uc2luZ2xlLWlucHV0IGlucHV0e1xyXG4gIGJvcmRlcjowcHggc29saWQgI2MxYzFjMTtcclxuICB3aWR0aDogMTAwJTtcclxuICBvdXRsaW5lOiBub25lO1xyXG4gIGhlaWdodDogMzBweDtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbn1cclxuLnN1Ym1pdC1idG57XHJcbiAgIGJvcmRlcjowcHggc29saWQgI2MxYzFjMTtcclxuICAgbWFyZ2luLXRvcDogMzBweDtcclxuXHJcbn1cclxuLnN1Ym1pdC1idG4gaW5wdXR7XHJcbiAgIGJhY2tncm91bmQ6ICMwY2Q2YTg7XHJcbiAgIGNvbG9yOiAjZmZmO1xyXG4gICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuIl19 */\";\nexport class AdminLoginComponent {\n  constructor(formBuilder, router, service) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.service = service;\n    this.email = \"\";\n    this.password = \"\";\n    this.failed = false; //This is showing the email and password visible\n\n    this.adminForm = new FormGroup({\n      email: new FormControl(this.email, [Validators.required]),\n      password: new FormControl(this.password, [Validators.required])\n    });\n  }\n\n  adminLogin() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let resp = _this.service.login(_this.adminForm.value);\n\n      resp.subscribe({\n        next: response => {\n          if (response.toString() === \"true\") {\n            _this.router.navigate([\"admin\"]);\n          }\n        },\n        error: error => _this.failed = true\n      });\n    })();\n  }\n\n  ngOnInit() {}\n\n}\n\nAdminLoginComponent.ɵfac = function AdminLoginComponent_Factory(t) {\n  return new (t || AdminLoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.RestaurantService));\n};\n\nAdminLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AdminLoginComponent,\n  selectors: [[\"app-admin-login\"]],\n  decls: 28,\n  vars: 1,\n  consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.css\"], [1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [\"href\", \"welcome\", 1, \"navbar-brand\"], [\"src\", \"assets/logo.png\", 1, \"rounded-image\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"data-target\", \"#navbarColor02\", \"aria-controls\", \"navbarColor02\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [1, \"container\"], [1, \"my-form\"], [1, \"form-title\"], [1, \"text-center\", 3, \"formGroup\", \"ngSubmit\"], [1, \"single-input\"], [1, \"fas\", \"fa-user\"], [\"formControlName\", \"email\", \"type\", \"email\", \"name\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [1, \"fas\", \"fa-unlock\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [1, \"single-input\", \"submit-btn\"], [\"type\", \"submit\", \"value\", \"Login\"]],\n  template: function AdminLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n      i0.ɵɵelement(2, \"meta\", 1);\n      i0.ɵɵelementStart(3, \"title\");\n      i0.ɵɵtext(4, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"link\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"body\")(7, \"nav\", 3)(8, \"a\", 4);\n      i0.ɵɵelement(9, \"img\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 6);\n      i0.ɵɵelement(11, \"span\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"div\", 8)(13, \"div\", 9)(14, \"div\", 10)(15, \"h1\");\n      i0.ɵɵtext(16, \"Admin Login\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"form\", 11);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminLoginComponent_Template_form_ngSubmit_17_listener() {\n        return ctx.adminLogin();\n      });\n      i0.ɵɵelementStart(18, \"div\", 12)(19, \"span\");\n      i0.ɵɵelement(20, \"i\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 12)(23, \"span\");\n      i0.ɵɵelement(24, \"i\", 15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 17);\n      i0.ɵɵelement(27, \"input\", 18);\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"formGroup\", ctx.adminForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [_c0, _c0]\n});","map":{"version":3,"mappings":";AAEA,SAAQA,WAAR,EAAqBC,SAArB,EAA6CC,UAA7C,QAA8D,gBAA9D;;;;;;AAQA,OAAM,MAAOC,mBAAP,CAA0B;EAS9BC,YAAoBC,WAApB,EAAsDC,MAAtD,EAA8EC,OAA9E,EAAwG;IAApF;IAAkC;IAAwB;IAP9E,aAAgB,EAAhB;IACA,gBAAmB,EAAnB;IAEA,cAAkB,KAAlB,CAIwG,CAEtG;;IACA,KAAKC,SAAL,GAAiB,IAAIP,SAAJ,CAAc;MAC7BQ,KAAK,EAAE,IAAIT,WAAJ,CAAgB,KAAKS,KAArB,EAA4B,CAACP,UAAU,CAACQ,QAAZ,CAA5B,CADsB;MAE7BC,QAAQ,EAAE,IAAIX,WAAJ,CAAgB,KAAKW,QAArB,EAA+B,CAACT,UAAU,CAACQ,QAAZ,CAA/B;IAFmB,CAAd,CAAjB;EAID;;EAEKE,UAAU;IAAA;;IAAA;MACd,IAAIC,IAAI,GAAG,KAAI,CAACN,OAAL,CAAaO,KAAb,CAAmB,KAAI,CAACN,SAAL,CAAeO,KAAlC,CAAX;;MACAF,IAAI,CAACG,SAAL,CAAe;QACbC,IAAI,EAAGC,QAAD,IAAa;UACjB,IAAGA,QAAQ,CAACC,QAAT,OAAuB,MAA1B,EAAkC;YAChC,KAAI,CAACb,MAAL,CAAYc,QAAZ,CAAqB,CAAC,OAAD,CAArB;UACD;QACF,CALY;QAMbC,KAAK,EAAGA,KAAD,IAAW,KAAI,CAACC,MAAL,GAAc;MANnB,CAAf;IAFc;EAUf;;EAIDC,QAAQ,IAEP;;AAlC6B;;;mBAAnBpB,qBAAmBqB;AAAA;;;QAAnBrB;EAAmBsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCThCL,gCAAgB,CAAhB,EAAgB,MAAhB;MAEEA;MACAA;MAAOA;MAAKA;MAEZA;MAGFA;MAGAA,6BAAM,CAAN,EAAM,KAAN,EAAM,CAAN,EAAM,CAAN,EAAM,GAAN,EAAM,CAAN;MAKMA;MACFA;MACAA;MACEA;MACFA;MAGJA,gCAAuB,EAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,EAAvB,EAAuB,KAAvB,EAAuB,EAAvB,EAAuB,EAAvB,EAAuB,IAAvB;MAKUA;MAAWA;MAIjBA;MAAmDA;QAAA,OAAYM,gBAAZ;MAAwB,CAAxB;MACjDN,iCAA0B,EAA1B,EAA0B,MAA1B;MACQA;MAA2BA;MACjCA;MACFA;MACAA,iCAA0B,EAA1B,EAA0B,MAA1B;MACQA;MAA6BA;MACnCA;MACFA;MAEAA;MACEA;MACFA;;;;MAZyBA;MAAAA","names":["FormControl","FormGroup","Validators","AdminLoginComponent","constructor","formBuilder","router","service","adminForm","email","required","password","adminLogin","resp","login","value","subscribe","next","response","toString","navigate","error","failed","ngOnInit","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["E:\\CS-Project\\RestaurantApp\\frontend\\src\\app\\components\\admin-login\\admin-login.component.ts","E:\\CS-Project\\RestaurantApp\\frontend\\src\\app\\components\\admin-login\\admin-login.component.html"],"sourcesContent":["import { Component,Input, OnInit } from '@angular/core';\r\nimport { RestaurantService } from '../../restaurant.service'\r\nimport {FormControl, FormGroup, FormBuilder, Validators} from '@angular/forms'\r\nimport { Router } from '@angular/router'\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\nexport class AdminLoginComponent implements OnInit{\r\n\r\n  email: string = \"\";\r\n  password: string = \"\";\r\n\r\n  failed: boolean = false;\r\n\r\n  adminForm!: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private service: RestaurantService){\r\n\r\n    //This is showing the email and password visible\r\n    this.adminForm = new FormGroup({\r\n      email: new FormControl(this.email, [Validators.required]),\r\n      password: new FormControl(this.password, [Validators.required])\r\n    });\r\n  }\r\n\r\n  async adminLogin(){\r\n    let resp = this.service.login(this.adminForm.value);\r\n    resp.subscribe({\r\n      next: (response) => {\r\n        if(response.toString()===(\"true\")){\r\n          this.router.navigate([\"admin\"]);\r\n        }\r\n      },//this.router.navigate([\"restaurant\"]),\r\n      error: (error) => this.failed = true\r\n    });\r\n  }\r\n\r\n\r\n\r\n  ngOnInit(){\r\n\r\n  }\r\n}\r\n","<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Login</title>\r\n  <!-- fontawesome cdn for icon -->\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.2/css/all.css\" />\r\n  <!-- main css file -->\r\n  <link rel=\"stylesheet\" href=\"admin-login.component.css\">\r\n</head>\r\n\r\n\r\n<body>\r\n\r\n  <!-- The Header -->\r\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"welcome\">\r\n      <img class=\"rounded-image\" src=\"assets/logo.png\">\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  </nav>\r\n\r\n<div class=\"container\">\r\n\r\n    <!-- form start -->\r\n  <div class=\"my-form\">\r\n    <div class=\"form-title\">\r\n      <h1>Admin Login</h1>\r\n    </div>\r\n    <!-- main form -->\r\n    <!-- You need the ReactiveFormModule and FormModule to be added to your app.module.ts -->\r\n    <form class=\"text-center\"  [formGroup]=\"adminForm\" (ngSubmit)=\"adminLogin()\">\r\n      <div class=\"single-input\">\r\n        <span><i class=\"fas fa-user\"></i></span>\r\n        <input class=\"form-control\" formControlName=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\">\r\n      </div>\r\n      <div class=\"single-input\">\r\n        <span><i class=\"fas fa-unlock\"></i></span>\r\n        <input class=\"form-control\" formControlName=\"password\" type=\"password\" placeholder=\"Password\">\r\n      </div>\r\n\r\n      <div class=\"single-input submit-btn\">\r\n        <input type=\"submit\" value=\"Login\">\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n</body>\r\n</html>\r\n"]},"metadata":{},"sourceType":"module"}